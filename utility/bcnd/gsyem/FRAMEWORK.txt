#Configuration file for Nek5000 framework developed at KTH
# Place for short description; doxygen style
/**
@defgroup gsyn_eddy  Generalised synthetic eddy method module
@ingroup bcnd

@brief Turbulence at inlet generated with divergence-free synthetic eddy method.

@details
This set of routines generating set of vortices at the computational domain inlet.
Poletto, Ruggero: Divergence free development of the synthetic eddy method in order to improve synthetic turbulence 
for embedded les simulations, PhD Thesis, The University of Manchester, 2015

This module requires runtime parameters defined by @ref chkpoint module to properly perform restart operations. 
User defined routine (\a usr_gen_eddy) provides the rules for generating a single vortex. It allows the user to 
specify vertex distribution on the face (e.g. within a circle or a rectangular region) and a given vortex orientation.
An example provided in this directory gives random position within a circle (random rho and theta variables) assuming 
the face is normal to Z axis. Two different options are considered depending on (\a ifinit) flag. The first one corresponsd
to a simulation initialisation where the vortices fill the whole testing volume. In the second one the vortives are placed
on at the inflow position only. Next a vortex position is rotated to match a real face position in the computational domain. 
The final step is definition of the vortex orinetation with an integer array.
@todo This description has to be extended.


@mod_interface
@interface_list Interface provided:
-# @ref gsem_register
-# @ref gsem_init
-# @ref gsem_main

@par
@interface_reqr Interface required:
-# multiple interfaces from [runtime parameters] (@ref runparam) and [monitor] (@ref monitor) modules
-# @ref io_file_freeid from [Input/output] (@ref io) module (debugging only)
-# @ref math_ran_rng, @ref math_zbqlini, @ref math_etovec and @ref math_rot3da from @ref math module
-# (\a usr_gen_eddy); user defined

@mod_interface_example
@code{.f}
!======================================================================
      subroutine userchk
      include 'TSTEP'           ! ISTEP
      
!     start framework
      if (ISTEP.eq.0) call frame_start

!     monitor simulation
      call frame_monitor

!     add turbulent inflow
      call gsem_main

!     finalise framework
      if (ISTEP.ge.NSTEPS.or.LASTEP.eq.1) then
         call frame_end
      endif

      return
      end
!======================================================================
!> @brief Register user specified modules
      subroutine frame_usr_register
      implicit none

      include 'SIZE'
      include 'FRAMELP'
!-----------------------------------------------------------------------
!     register modules
      call chkpt_register
      call gsem_register

      return
      end subroutine
!======================================================================
!> @brief Initialise user specified modules
      subroutine frame_usr_init
      implicit none

      include 'SIZE'
      include 'FRAMELP'
!-----------------------------------------------------------------------
!     initialise modules
      call chkpt_init
      call gsem_init

      return
      end subroutine
!======================================================================
!> @brief Finalise user specified modules
      subroutine frame_usr_end
      implicit none

      include 'SIZE'
      include 'FRAMELP'
!-----------------------------------------------------------------------

      
      return
      end subroutine
!======================================================================
@endcode
@include Toolbox/utility/bcnd/gsyem/example.usr

@mod_param
@param_list Parameters provided by sponge_box module (include file - \a SPONGRBD):
|Varaible | Type | Runtime parameter | Default value | Description |
|---------|------|-------------------|---------------|-------------|
|gsem_mode | integer | _gsyem:mode | 1 | gSyEM mode |
|gsem_nfam | integer | _gsyem:nfam | 1 | Family number |
|gsem_neddy(il) | integer | _gsyem:neddy'il' | 10 | Numer of eddies of 'il' family |
|gsem_fambc(il) | integer | _gsyem:fambc'il' | 10 | Boundarry index of 'il' family |
|gsem_famasig(il) | real | _gsyem:famasig'il' | 0.025 | Max eddy size of 'il' family |
|gsem_famisig(il) | real | _gsyem:famisig'il' | 0.025 | Min eddy size of 'il' family |
|gsem_famdirx(il) | real | _gsyem:famdirx'il' | 0.025 | X normal component of 'il' family |
|gsem_famdiry(il) | real | _gsyem:famdiry'il' | 0.025 | X normal component of 'il' family |
|gsem_famdirz(il) | real | _gsyem:famdirz'il' | 0.025 | X normal component of 'il' family |

@mod_param_example
@include Toolbox/utility/bcnd/gsyem/example.par


*/
