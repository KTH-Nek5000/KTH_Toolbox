#Configuration file for Nek5000 framework developed at KTH
# Place for short description; doxygen style
/**
@defgroup gsyem  Generalised synthetic eddy method module
@ingroup bcnd

@brief Turbulence at inlet generated with divergence-free synthetic eddy method.

@details
This set of routines generating set of vortices at the computational domain inlet.
The method is based on @cite Poletto2015.

This module requires runtime parameters defined by @ref chkpt module to properly perform restart operations. 
User defined routine (@a usr_gen_eddy) provides the rules for generating a single vortex. It allows the user to 
specify vertex distribution on the face (e.g. within a circle or a rectangular region) and a given vortex orientation.
An example provided in this directory gives random position within a circle (random rho and theta variables) assuming 
the face is normal to Z axis. Two different options are considered depending on (@a ifinit) flag. The first one corresponsd
to a simulation initialisation where the vortices fill the whole testing volume. In the second one the vortives are placed
on at the inflow position only. Next a vortex position is rotated to match a real face position in the computational domain. 
The final step is definition of the vortex orinetation with an integer array.
In addition the user has to provide a radial distribution of a mean velocity (U_mean), a turbulence kinetic energy (k) and a dissipation rate (eps).
U_mean, k and eps have to be given in a text file "gsyem_prof_###.txt" containing three header lines:

\# point number in a profile
187
\# r  U_mean  k  eps

followed by the data set for each point in the profile. The scend line in the header gives the number of radial positions in the profile, and the data 
set consists of four real numbers: radial position (r), U_mean, k and eps.

@todo This description has to be extended.

@mod_interface
@interface_list Interface provided:
-# @ref gsyem_register
-# @ref gsyem_init
-# @ref gsyem_main

@par
@interface_reqr Interface required:
-# multiple interfaces from @ref rprm and @ref mntr modules
-# @ref io_file_freeid from @ref io module (debugging only)
-# @ref chkpt_get_fset from @ref chkpt module
-# @ref math_ran_rng, @ref math_zbqlini, @ref math_etovec and @ref math_rot3da from @ref math module
-# @a usr_gen_eddy; user defined

@mod_interface_example
@code{.f}
!======================================================================
      subroutine userchk
      include 'TSTEP'           ! ISTEP
      
!     start framework
      if (ISTEP.eq.0) call frame_start

!     monitor simulation
      call frame_monitor

!     save/load files for full-restart
      call chkpt_main

!     add turbulent inflow
      call gsyem_main

!     finalise framework
      if (ISTEP.ge.NSTEPS.or.LASTEP.eq.1) then
         call frame_end
      endif

      return
      end
!======================================================================
!> @brief Register user specified modules
      subroutine frame_usr_register
      implicit none

      include 'SIZE'
      include 'FRAMELP'
!-----------------------------------------------------------------------
!     register modules
      call chkpt_register
      call gsyem_register

      return
      end subroutine
!======================================================================
!> @brief Initialise user specified modules
      subroutine frame_usr_init
      implicit none

      include 'SIZE'
      include 'FRAMELP'
!-----------------------------------------------------------------------
!     initialise modules
      call chkpt_init
      call gsyem_init

      return
      end subroutine
!======================================================================
!> @brief Finalise user specified modules
      subroutine frame_usr_end
      implicit none

      include 'SIZE'
      include 'FRAMELP'
!-----------------------------------------------------------------------

      
      return
      end subroutine
!======================================================================
@endcode
@include Toolbox/utility/bcnd/gsyem/example.usr

@warning This module's restart procedure depends on @ref chkpt module. As multisetep checpointeing sets
the number of the restart file set @a chkpt_main must be called before @a gsyem_main.

@mod_param
@param_list Parameters provided by gsyem module (include file - @a GSYEMD):
|Varaible | Type | Runtime parameter | Default value | Description |
|---------|------|-------------------|---------------|-------------|
|gsyem_mode | integer | _gsyem:mode | 1 | gSyEM mode |
|gsyem_nfam | integer | _gsyem:nfam | 1 | Family number |
|gsyem_neddy(il) | integer | _gsyem:neddy'il' | 10 | Numer of eddies of 'il' family |
|gsyem_fambc(il) | integer | _gsyem:fambc'il' | 10 | Boundarry index of 'il' family |
|gsyem_famasig(il) | real | _gsyem:famasig'il' | 0.025 | Max eddy size of 'il' family |
|gsyem_famisig(il) | real | _gsyem:famisig'il' | 0.025 | Min eddy size of 'il' family |
|gsyem_famdirx(il) | real | _gsyem:famdirx'il' | 0.025 | X normal component of 'il' family |
|gsyem_famdiry(il) | real | _gsyem:famdiry'il' | 0.025 | X normal component of 'il' family |
|gsyem_famdirz(il) | real | _gsyem:famdirz'il' | 0.025 | X normal component of 'il' family |

@par
@param_reqr Parameters required by gsyem module:
-# @ref chkpt :
   + _chkpt:readchkpt - start simulation form checkpoint
   + _chkpt:chkpFnumber - restart file number
-# Nek5000
   + PARAM(27)

@mod_param_example
@include Toolbox/utility/bcnd/gsyem/example.par


*/
