#Configuration file for Nek5000 framework developed at KTH
# Place for short description; doxygen style
/**
@defgroup gsyn_eddy  Generalised synthetic eddy method module
@ingroup bcnd

@brief Turbulence at inlet generated with divergence-free synthetic eddy method.

@details
This set of routines 
Poletto, Ruggero: Divergence free development of the synthetic eddy method in order to improve synthetic turbulence for embedded les simulations, PhD Thesis, The University of Manchester, 2015

@mod_interface
@interface_list Interface provided:
-# @ref gsem_register
-# @ref gsem_init
-# @ref gsem_main

@par
@interface_reqr Interface required:
-# usr_gen_eddy

@mod_interface_example
@code{.f}
      subroutine userchk
      include 'TSTEP'           ! ISTEP
      
!     start framework
      if (ISTEP.eq.0) call frame_start

!     monitor simulation
      call frame_monitor

!     add turbulent inflow
      call gsem_main

!     finalise framework
      if (ISTEP.ge.NSTEPS.or.LASTEP.eq.1) then
         call frame_end
      endif

      return
      end
!======================================================================
!> @brief Register user specified modules
      subroutine frame_usr_register
      implicit none

      include 'SIZE'
      include 'FRAMELP'
!-----------------------------------------------------------------------
!     register modules
      call io_register
      call chkpt_register
      call gsem_register

      return
      end subroutine
!======================================================================
!> @brief Initialise user specified modules
      subroutine frame_usr_init
      implicit none

      include 'SIZE'
      include 'FRAMELP'
!-----------------------------------------------------------------------
!     initialise modules
      call chkpt_init
      call gsem_init

      return
      end subroutine
!======================================================================
!> @brief Finalise user specified modules
      subroutine frame_usr_end
      implicit none

      include 'SIZE'
      include 'FRAMELP'
!-----------------------------------------------------------------------

      
      return
      end subroutine
!======================================================================
!> @brief Generate single eddy for a given family
!! @param[out] epos       eddy position
!! @param[out] eps        eddy orientation
!! @param[in]  nfam       family number
!! @param[in]  ifinit     intial distribution
      subroutine usr_gen_eddy(epos,eps,nfam,ifinit)
      implicit none

      include 'SIZE'
      include 'TSTEP'           ! pi
      include 'GSYEMD'

      ! argument list
      real epos(ldim)
      integer eps(ldim)
      integer nfam
      logical ifinit

      ! local variables
      real rho, theta, vrtmp(ldim)
      integer il

      real yp_cut
      parameter (yp_cut=0.45)
      
      ! functions
      real mth_ran_rng
!-----------------------------------------------------------------------
      rho = yp_cut*sqrt(mth_ran_rng(0.0,1.0))  
      theta = mth_ran_rng(0.,2.0*pi)

      vrtmp(1) = rho*cos(theta)
      vrtmp(2) = rho*sin(theta)
      if (ifinit) then
         vrtmp(ldim) = mth_ran_rng(-gsem_bext(nfam),gsem_bext(nfam))
      else
         vrtmp(ldim) = -gsem_bext(nfam)
      endif

      ! rotate coordinates
      call mth_rot3Da(epos,vrtmp,
     $        gsem_raxs(1,nfam),gsem_rang(nfam))

      do il=1,ldim
         rho = mth_ran_rng(0.0,1.0)
         if (rho.gt.0.5) then
            eps(il) = 1
         else
            eps(il) = -1
         endif
      enddo

      return
      end subroutine
!=======================================================================
@endcode

@mod_param
@param_list Parameters provided by sponge_box module (include file - \a SPONGRBD):
|Varaible | Type | Runtime parameter | Default value | Description |
|---------|------|-------------------|---------------|-------------|
|gsem_mode | integer | _gsyem:mode | 1 | gSyEM mode |
|gsem_nfam | integer | _gsyem:nfam | 1 | Family number |
|gsem_neddy(il) | integer | _gsyem:neddy'il' | 10 | Numer of eddies of 'il' family |
|gsem_fambc(il) | integer | _gsyem:fambc'il' | 10 | Boundarry index of 'il' family |
|gsem_famasig(il) | real | _gsyem:famasig'il' | 0.025 | Max eddy size of 'il' family |
|gsem_famisig(il) | real | _gsyem:famisig'il' | 0.025 | Min eddy size of 'il' family |
|gsem_famdirx(il) | real | _gsyem:famdirx'il' | 0.025 | X normal component of 'il' family |
|gsem_famdiry(il) | real | _gsyem:famdiry'il' | 0.025 | X normal component of 'il' family |
|gsem_famdirz(il) | real | _gsyem:famdirz'il' | 0.025 | X normal component of 'il' family |

@mod_param_example
@code{.txt}
[_GSYEM]
mode = 1
nfam = 1
neddy01              = 10000
fambc01              = 1
famasig01            = 0.25
famisig01            = 0.0025
famdirx01            = 0.0
famdiry01            = 0.0
famdirz01            = 0.0
@endcode


*/
#List of existing submodules
SUBMODULES 

#List of conflicting submodules
EXCLUSIVE

#Default submodules
DEFAULT

#List of conflicting modules
CONFLICTS

#List of required modules
REQUIRED io/checkpoint/mstep \
		 utility/math \
         driver/runparam

#List of object files
OBJECT gSyEM.o

#List of include files
INCLUDE GSYEMD
 