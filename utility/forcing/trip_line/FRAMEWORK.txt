#Configuration file for Nek5000 framework developed at KTH
# Place for short description; doxygen style
/**
@defgroup trip_line  Line tripping module
@ingroup forcing

@brief Random volume force along the line

@details Set of routines to generate random volume force along the line running in the spanwise direction of the doman to 
mimic sand paper effect. Its aim is to introduce to the flow low amplitude random noise, that can be used to 
study e.g. a stability of a boundary layer. This focing is applied only in the eliptical region along the line 
defined by the smoothing lengths SMTHX and SMTHY and rotated counterclockwise by ROTA angle. This angel is used 
as well to rotate the force (x- and y-components), so the forcing can be normal to the wall. 
The smoothing function is defined in the following way:
\f{eqnarray*}{
    f_{smth}(r) = \left\{ \begin{array}{ll}
     exp\left(-r^2\right)*\left(1-r^2\right)^2  &\mbox{ if $r \leq 1.0$} \\
     0 &\mbox{ if $x >  1.0$}
     \end{array} \right.
\f}
where
\f[ r^2 = \left( {x_{rot} \over SMTHX} \right)^2 + \left( {y_{rot} \over SMTHY} \right)^2 \f],
and
\f{eqnarray*}{ 
x_{rot} &=&  x_{tr}*cos(ROTA)+y_{tr}*sin(ROTA), \\
y_{rot} &=& -x_{tr}*sin(ROTA)+y_{tr}*cos(ROTA). 
\f}
\f$x_{tr}\f$ and \f$y_{tr}\f$ are here the GLL point coordinates relative to the tripping line.
However, the function with limitted support can be easily replaced with simple Gauss profile
(see commented lines in @ref trip_1dprj and notice factor 4.0 in the Gauss function necessary to 
make smoothing lenghts consistent with the original function).
The tripping has both steady and unsteeady parts with amplitudes TIAMP and TDAMP respectively,
and the forcing is given by:
 \f{eqnarray*}{ 
f_x &=& -f_{smth}(r)*f(z,t)*sin(ROTA), \\
f_y &=&  f_{smth}(r)*f(z,t)cos(ROTA), 
\f}
where
\f[ f(z,t) = TIAMP*g(z) + TDAMP*\left[ \left(1-b(t)\right)h^i(z) +  b(t)h^{i+1}(z) \right] \f],
and 
\f{eqnarray*}{
i &=& int(t/TDT), \\
b(t) &=& 3p^2-2p^3, \\
p &=& t/TDT -i.
\f}
Here \f$g(z)\f$ and \f$h(z)\f$ are Fourier series of unit amplitude with NMODE random coefficients.
The trip forcing generates noise with a uniform distribution over all frequencies lower than the 
cutoff frequency corresponding to \f$2\pi/TDT\f$, where TDT is a time interval between change of 
the time dependent part of the trip.

This forcing has one continuous time derivative and is independent of the time discretisation.
It should be independent as well on the simulation details (e.g. number of mpi ranks or 
restart flag). It is based on a similar implementation in the SIMSON code @cite Chevalier2007, 
and is described in detail in @cite Schlatter2012.

This tool can simulate number of lines with different set of parameters for each line. The maximal
number of lines is given by trip_nline_max in TRIPD include file. In the same way maximal number of 
Fouries modes per line is given by trip_nmode_max parameter. User havs to adjust values of these variables
before compilation of the code.

@mod_interface
@interface_list Interface provided:
-# @ref trip_register
-# @ref trip_init
-# @ref trip_is_initialised
-# @ref trip_update
-# @ref trip_forcing
-# @ref trip_reset

@mod_interface_example
@code{.f}
      subroutine userf  (ix,iy,iz,ieg)
      include 'SIZE'
      include 'NEKUSE'          ! FF[XYZ]
      include 'PARALLEL'        ! GLLEL
      include 'SOLN'            ! V[XYZ]

      integer ix,iy,iz,ieg

      FFX = 0.0
      FFY = 0.0
      FFZ = 0.0

!     add tripping
      call trip_forcing(FFX,FFY,FFZ,ix,iy,iz,ieg)

      return
      end
!-----------------------------------------------------------------------
      subroutine userchk
      implicit none
      include 'SIZE'            !
      include 'TSTEP'           ! ISTEP, lastep, time
      include 'INPUT'           ! IF3D, PARAM
      
!     start framework
      if (ISTEP.eq.0) call frame_start

!     monitor simulation
      call frame_monitor

!     save/load files for full-restart
      call chkpt_main

!     for tripping
      call trip_update

!     finalise framework
      if (ISTEP.eq.NSTEPS.or.LASTEP.eq.1) then
         call frame_end
      endif
     
      return
      end
!======================================================================
!> @brief Register user specified modules
      subroutine frame_usr_register
      implicit none

      include 'SIZE'
      include 'FRAMELP'
!-----------------------------------------------------------------------
!     register modules
      call io_register
      call chkpt_register
      call trip_register

      return
      end subroutine
!======================================================================
!> @brief Initialise user specified modules
      subroutine frame_usr_init
      implicit none

      include 'SIZE'
      include 'FRAMELP'
      include 'SOLN'
!-----------------------------------------------------------------------
!     initialise modules
      call chkpt_init
      call trip_init

      return
      end subroutine
!======================================================================
!> @brief Finalise user specified modules
      subroutine frame_usr_end
      implicit none

      include 'SIZE'
      include 'FRAMELP'
!-----------------------------------------------------------------------
!     finalise modules
      
      return
      end subroutine
!======================================================================
@endcode

@mod_param
@param_list Parameters provided by trip_line module (include file - \a TRIPD):
|Varaible | Type | Runtime parameter | Default value | Description |
|---------|------|-------------------|---------------|-------------|
|trip_nline      | integer | _tripping:nline | 0  | Number of tripping lines |
|trip_tiamp      | real | _tripping:tiamp   | 0.0 | Time independent amplitude |
|trip_tdamp      | real | _tripping:tdamp   | 0.0 | Time dependent amplitude   |
|trip_spos(1,il) | real | _tripping:sposx'il' | 0.0 | Starting point X of 'il' line |
|trip_spos(2,il) | real | _tripping:sposy'il' | 0.0 | Starting point Y of 'il' line |
|trip_spos(3,il) | real | _tripping:sposz'il' | 0.0 | Starting point Z of 'il' line |
|trip_epos(1,il) | real | _tripping:eposx'il' | 0.0 | Ending point X of 'il' line |
|trip_epos(2,il) | real | _tripping:eposy'il' | 0.0 | Ending point Y of 'il' line |
|trip_epos(3,il) | real | _tripping:eposz'il' | 0.0 | Ending point Z of 'il' line |
|trip_smth(1,il) | real | _tripping:smthx'il' | 0.0 | Smoothing length X of 'il' line |
|trip_smth(2,il) | real | _tripping:smthy'il' | 0.0 | Smoothing length Y of 'il' line |
|trip_smth(3,il) | real | _tripping:smthz'il' | 0.0 | Smoothing length Z of 'il' line |
|trip_lext(il)   | logical | _tripping:lext'il' | .F. | Line extension |
|trip_rota(il)   | real | _tripping:rota'il'  | 0.0 | Rotation angle of 'il' line |
|trip_nmode(il)  | integer | _tripping:nmode'il' | 0  | Number of Fourier modes of 'il' line |
|trip_tdt(il)   | real | _tripping:tdt'il'  | 0.0 | Time step for tripping of 'il' line |

@mod_param_example
@code{.txt}
[_TRIPPING]             # Runtime paramere section for tripping module
NLINE                = 2                      # Number of tripping lines
TIAMP                = 0.00000000E+00         # Time independent amplitude
TDAMP                = 1.00000000E+01         # Time dependent amplitude
SPOSX01              = 8.30000000E+00         # Starting pont X
SPOSY01              = 3.03500000E+00         # Starting pont Y
SPOSZ01              = 0.00000000E+00         # Starting pont Z
EPOSX01              = 8.30000000E+00         # Ending pont X
EPOSY01              = 3.03500000E+00         # Ending pont Y
EPOSZ01              = 4.50000000E+00         # Ending pont Z
SMTHX01              = 1.36000000E+00         # Smoothing length X
SMTHY01              = 0.34000000E+00         # Smoothing length Y
SMTHZ01              = 0.00000000E+00         # Smoothing length Z
LEXT01               = yes                    # Line extension
ROTA01               = 0.00000000E+00         # Rotation angle in radians
NMODE01              = 16                     # Number of Fourier modes
TDT01                = 0.14000000E+00         # Time step for tripping
SPOSX02              = 8.80000000E+00         # Starting pont X
SPOSY02              = 0.99430000E+00         # Starting pont Y
SPOSZ02              = 0.00000000E+00         # Starting pont Z
EPOSX02              = 8.80000000E+00         # Ending pont X
EPOSY02              = 0.99430000E+00         # Ending pont Y
EPOSZ02              = 4.50000000E+00         # Ending pont Z
SMTHX02              = 0.28000000E+00         # Smoothing length X
SMTHY02              = 0.07000000E+00         # Smoothing length Y
SMTHZ02              = 0.00000000E+00         # Smoothing length Z
SMTHZ02              = 0.20000000E+00         # Smoothing length Z
LEXT02               = no                     # Line extension
ROTA02               = 0.12300000E+00         # Rotation angle in radians
NMODE02              = 76                     # Number of Fourier modes
TDT02                = 0.14000000E+00         # Time step for tripping
@endcode


*/
#List of existing submodules
SUBMODULES 

#List of conflicting submodules
EXCLUSIVE

#Default submodules
DEFAULT

#List of conflicting modules
CONFLICTS

#List of required modules
REQUIRED driver/frame

#List of object files
OBJECT trip.o

#List of include files
INCLUDE TRIPD
 