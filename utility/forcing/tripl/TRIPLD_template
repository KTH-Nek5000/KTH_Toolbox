!> @file TRIPLD
!! @ingroup tripl
!! @brief Include file with parameter and common block definitionsfor
!!  tripping
!! @author Adam Peplinski
!! @date May 03, 2018
!=======================================================================
!     module id and name
      integer tripl_id
      character*(*) tripl_name
      parameter(tripl_name='TRIPL')

!     timer id
      integer tripl_tmr_id

!     initialisation flag
      logical tripl_ifinit

!     runtime parameter part
!     section id
      integer tripl_sec_id    

!     max number of lines and Fourier modes
      integer tripl_nline_max
      parameter (tripl_nline_max=2) ! CASE SPECIFIC
      integer tripl_nmode_max
      parameter (tripl_nmode_max=500) ! CASE SPECIFIC
!     max number of random phase sets stored; 1- time independent, 2, 3 and 4 - time dependent
!     I keep two old random pahase sets to get correct restart after AMR refinement
      integer tripl_nset_max
      parameter (tripl_nset_max=4)

!     parameter section
      integer tripl_nline                   !< @var number of tripping lines
      integer tripl_nline_id
      real tripl_tiamp(tripl_nline_max)     !< @var time independent amplitude
      integer tripl_tiamp_id(tripl_nline_max)
      real tripl_tdamp(tripl_nline_max)     !< @var time dependent amplitude
      integer tripl_tdamp_id(tripl_nline_max)
      real tripl_spos(LDIM,tripl_nline_max) !< @var coordinates of starting point of tripping line
      integer tripl_spos_id(LDIM,tripl_nline_max)
      real tripl_epos(LDIM,tripl_nline_max) !< @var coordinates of ending point of tripping line
      integer tripl_epos_id(LDIM,tripl_nline_max)
      real tripl_smth(LDIM,tripl_nline_max) !< @var smoothing radius
      integer tripl_smth_id(LDIM,tripl_nline_max)
      logical tripl_lext(tripl_nline_max)   !< @var do we extend a line beyond starting and endig points
      integer tripl_lext_id(tripl_nline_max)
      real tripl_rota(tripl_nline_max)      !< @var elipse rotation angle
      integer tripl_rota_id(tripl_nline_max)
      integer tripl_nmode(tripl_nline_max)  !< @var number of Fourier modes
      integer tripl_nmode_id(tripl_nline_max)
      real tripl_tdt(tripl_nline_max)       !< @var time step for tripping
      integer tripl_tdt_id(tripl_nline_max)

!     inverse line length
      real tripl_ilngt(tripl_nline_max)

!     inverse smoothing radius
      real tripl_ismth(LDIM,tripl_nline_max)
      
!     projection of 3D pionts on 1D line
      real tripl_prj(lx1*ly1*lz1*lelt,tripl_nline_max)

!     number of points in 1D projection
      integer tripl_npoint(tripl_nline_max)
      
!     mapping of 3D array to 1D projection array
      integer tripl_map(lx1,ly1,lz1,lelt,tripl_nline_max)

!     function for smoothing of the forcing
      real tripl_fsmth(lx1,ly1,lz1,lelt,tripl_nline_max)

!     seed for random number generator; different for each line
      integer tripl_seed(tripl_nline_max)

!     number of tripping time intervals
      integer tripl_ntdt(tripl_nline_max), 
     $        tripl_ntdt_old(tripl_nline_max)
      
!     versor system defined for each tripping line
      real tripl_vrs(ldim,ldim,tripl_nline_max)
      
!     set of random phases (static, current and prevoious)
      real tripl_rphs(tripl_nmode_max,tripl_nset_max,tripl_nline_max)

!     set of forcing arrays (static, current and prevoious)
      real tripl_frcs(lx1*ly1*lz1*lelt,tripl_nset_max,
     $      tripl_nline_max)

!     tripping array; interpolated value to set in 3D arrays
      real tripl_ftrp(lx1*ly1*lz1*lelt,tripl_nline_max)
      
!     common block section
      common /tripi/ tripl_id, tripl_tmr_id, tripl_sec_id, 
     $     tripl_nline, tripl_nline_id, tripl_nmode, tripl_nmode_id, 
     $     tripl_tiamp_id, tripl_tdamp_id, tripl_tdt_id, 
     $     tripl_spos_id, tripl_epos_id, tripl_smth_id, tripl_lext_id,
     $     tripl_rota_id, tripl_npoint, tripl_map, tripl_seed, 
     $     tripl_ntdt, tripl_ntdt_old

      common /tripr/ tripl_tiamp, tripl_tdamp, tripl_tdt, tripl_spos,
     $     tripl_epos, tripl_smth, tripl_rota, tripl_ilngt, 
     $     tripl_ismth, tripl_prj, tripl_fsmth, tripl_vrs, tripl_rphs,
     $     tripl_frcs, tripl_ftrp

      common /tripl/ tripl_ifinit, tripl_lext
